VSCodeでTableau用データ前処理を行うPythonコードを作成します！包括的なデータクリーニング・変換機能を持つクラスベースのコードにします。VSCode用のTableau前処理Pythonコードを作成しました！このコードは包括的なデータ前処理機能を提供する`TableauDataPreprocessor`クラスです。

## 🔧 主な機能

**データ読み込み・分析:**
- Excel/CSV自動読み込み（文字エンコーディング自動判定）
- データ概要表示・プレビュー機能
- 処理ログ記録

**クリーニング機能:**
- 空行・空列削除（閾値指定可能）
- 重複データ除去
- 欠損値処理（7種類の方法）
- テキストデータクリーニング

**変換機能:**
- データ型自動変換
- カスタムフィルタリング
- 列名変更
- Tableau最適化

## 📦 必要なライブラリ

```bash
pip install pandas numpy openpyxl
```

## 🚀 基本的な使用方法

```python
# 1. インスタンス作成とデータ読み込み
processor = TableauDataPreprocessor("your_data.xlsx")

# 2. データ概要確認
processor.show_data_info()
processor.preview_data()

# 3. 基本クリーニング実行
processor.remove_empty_rows()
processor.remove_duplicates()
processor.clean_text_data()
processor.convert_data_types()

# 4. Tableau用保存
processor.create_tableau_extract("clean_data.xlsx")
```

## 💡 高度な使用例

```python
# カスタムフィルタリング
conditions = {
    'sales_amount': {'operator': '>', 'value': 1000},
    'region': {'operator': 'in', 'value': ['Tokyo', 'Osaka']}
}
processor.filter_data(conditions)

# 欠損値を平均値で埋める
processor.fill_missing_values(strategy='mean', columns=['price'])

# 手動型変換
type_mapping = {'date_col': 'datetime', 'category_col': 'category'}
processor.convert_data_types(type_mapping=type_mapping)
```

このコードをVSCodeで実行すると、Tableau分析に最適化されたクリーンなデータが生成されます。処理ログとサマリーも自動出力されるため、データ品質の変化を追跡できます！
