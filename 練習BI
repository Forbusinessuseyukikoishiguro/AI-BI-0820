# 【実践ガイド】Tableauでキャバクラ売上データを可視化！ステップバイステップ練習メニュー

## 🚀 事前準備：データ生成とTableau準備

### Step 1: データ生成器の実行

まず、以下のコードでサンプルデータを生成しましょう：

```python
# ファイル名: kyaba_data_generator.py
import pandas as pd
import numpy as np
from datetime import datetime, timedelta
import random

print("🍸 Tableau練習用データ生成開始...")

# 1. 顧客データ生成（簡潔版）
customers = []
for i in range(1, 501):
    rank = np.random.choice(['VIP', '優良', '一般', '新規'], p=[0.08, 0.22, 0.55, 0.15])
    age = random.randint(25, 55)
    
    customers.append({
        'customer_id': i,
        'customer_name': f"顧客_{i:03d}",
        'customer_rank': rank,
        'age': age,
        'occupation': np.random.choice(['経営者', '会社員', '医師', '弁護士', 'IT関係']),
        'registration_date': (datetime.now() - timedelta(days=random.randint(30, 730))).strftime('%Y-%m-%d')
    })

customers_df = pd.DataFrame(customers)

# 2. キャストデータ生成
casts = []
for i in range(1, 31):
    experience = random.randint(6, 60)
    casts.append({
        'cast_id': i,
        'cast_name': f"キャスト_{i:02d}",
        'cast_type': np.random.choice(['知的系', '癒し系', 'ギャル系', 'お姉さん系', '妹系']),
        'experience_months': experience,
        'hourly_rate': random.randint(3000, 8000),
        'rating': round(random.uniform(3.5, 5.0), 1)
    })

casts_df = pd.DataFrame(casts)

# 3. 売上データ生成
sales = []
start_date = datetime.now() - timedelta(days=365)

for i in range(1, 5001):  # 5000件のデータ
    # 日付生成（週末偏重）
    date = start_date + timedelta(days=random.randint(0, 365))
    if date.weekday() >= 5:  # 週末
        if random.random() > 0.7: continue
    else:  # 平日
        if random.random() > 0.3: continue
    
    # 時間生成（夜間偏重）
    hour = np.random.choice(range(19, 26), p=[0.05, 0.1, 0.15, 0.25, 0.25, 0.15, 0.05])
    if hour >= 24: hour -= 24
    
    customer = customers_df.sample(1).iloc[0]
    cast = casts_df.sample(1).iloc[0]
    
    # 金額計算（顧客ランクに応じて）
    base_amount = {
        'VIP': random.randint(50000, 200000),
        '優良': random.randint(30000, 100000),
        '一般': random.randint(15000, 60000),
        '新規': random.randint(10000, 40000)
    }[customer['customer_rank']]
    
    sales.append({
        'sale_id': i,
        'customer_id': customer['customer_id'],
        'cast_id': cast['cast_id'],
        'sale_date': date.strftime('%Y-%m-%d'),
        'sale_time': f"{hour:02d}:{random.randint(0, 59):02d}:00",
        'service_type': np.random.choice(['通常', 'プレミアム', 'VIP', '延長']),
        'amount': base_amount,
        'duration_minutes': random.randint(60, 300),
        'payment_method': np.random.choice(['現金', 'カード', '掛け'])
    })

sales_df = pd.DataFrame(sales)

# 4. CSVファイル出力
customers_df.to_csv('customers.csv', index=False, encoding='utf-8-sig')
casts_df.to_csv('casts.csv', index=False, encoding='utf-8-sig')
sales_df.to_csv('sales.csv', index=False, encoding='utf-8-sig')

print(f"✅ データ生成完了！")
print(f"📊 顧客: {len(customers_df)}件, キャスト: {len(casts_df)}件, 売上: {len(sales_df)}件")
print(f"💰 総売上: ¥{sales_df['amount'].sum():,}")
```

**実行コマンド：**
```bash
python kyaba_data_generator.py
```

### Step 2: Tableauの準備

1. **Tableau Desktop** を起動
2. 生成されたCSVファイルが同じフォルダにあることを確認
3. 練習用ワークブックを新規作成

---

## 📊 レベル別練習メニュー

## 🟢 初級編：基本チャート作成

### 練習1: 月別売上推移（線グラフ）

**目標：** 売上の時系列変化を把握する

**操作手順：**

1. **データ接続**
   ```
   [データに接続] → [ファイル] → [テキストファイル]
   → sales.csv を選択
   ```

2. **データ確認**
   ```
   📋 確認ポイント：
   - sale_date が日付型になっているか
   - amount が数値型になっているか
   - 文字化けがないか
   ```

3. **ワークシートで作業開始**
   ```
   [ワークシートに移動] をクリック
   ```

4. **チャート作成**
   ```
   📌 操作：
   1. [Sale Date] を列シェルフにドラッグ
   2. 右クリック → [月] を選択
   3. [Amount] を行シェルフにドラッグ
   4. SUM(Amount) になっていることを確認
   ```

5. **グラフタイプ変更**
   ```
   マークカードで [線] を選択
   ```

**期待される結果：**
```
📈 月別売上推移が線グラフで表示
- Y軸: 売上金額
- X軸: 月（2024年1月〜12月）
- 季節性や傾向が視覚的に確認可能
```

**🎯 練習のポイント：**
- どの月が売上ピークか？
- 売上の季節性はあるか？
- 前年同月比はどうか？

---

### 練習2: 顧客ランク別売上（円グラフ）

**目標：** 顧客セグメント別の売上構成を理解

**操作手順：**

1. **新しいワークシート作成**
   ```
   下部の [+] アイコンをクリック
   ```

2. **顧客データの結合**
   ```
   📌 重要：まずデータソースでテーブル結合
   
   [データソース] タブに戻る
   → [追加] をクリック
   → customers.csv を選択
   → customer_id で内部結合
   ```

3. **円グラフ作成**
   ```
   📌 操作：
   1. マークカードで [円] を選択
   2. [Customer Rank] を色シェルフにドラッグ
   3. [Amount] を角度シェルフにドラッグ
   4. [Customer Rank] をラベルシェルフにドラッグ
   5. [Amount] もラベルシェルフに追加
   ```

4. **ラベル設定**
   ```
   ラベルシェルフの [SUM(Amount)] を右クリック
   → [書式設定] → [数値] → [通貨]
   ```

**期待される結果：**
```
🎯 顧客ランク別売上円グラフ
- VIP: 約45% (最大セグメント)
- 優良: 約35%
- 一般: 約18%
- 新規: 約2%

💡 洞察例：
→ VIP顧客が全体の8%なのに売上の45%を占める
→ 新規顧客の育成が重要課題
```

---

### 練習3: 時間帯別来店数（棒グラフ）

**目標：** 営業時間の最適化のためのデータ分析

**操作手順：**

1. **新しいワークシート作成**

2. **時間データの準備**
   ```
   📌 計算フィールド作成：
   
   右クリック → [計算フィールドの作成]
   名前: "来店時間"
   計算式: HOUR([Sale Time])
   ```

3. **棒グラフ作成**
   ```
   📌 操作：
   1. [来店時間] を列シェルフにドラッグ
   2. [Sale Id] を行シェルフにドラッグ
   3. 右クリック → [メジャー] → [カウント]
   4. マークタイプを [棒] に設定
   ```

4. **軸ラベル設定**
   ```
   X軸を右クリック → [軸の編集]
   → タイトル: "時間帯"
   
   Y軸を右クリック → [軸の編集]
   → タイトル: "来店数"
   ```

**期待される結果：**
```
📊 時間帯別来店数
- 19時: 少なめ (開店直後)
- 22-23時: ピーク (最混雑)
- 25時以降: 減少傾向

💡 ビジネス活用：
→ ピーク時間の人員配置最適化
→ 閑散時間のプロモーション企画
```

---

## 🟡 中級編：複合チャートと分析

### 練習4: キャスト別パフォーマンス分析

**目標：** キャストの売上と指名数の相関分析

**操作手順：**

1. **キャストデータ結合**
   ```
   データソースに戻り、casts.csv を追加
   cast_id で結合
   ```

2. **散布図作成**
   ```
   📌 操作：
   1. マークタイプを [円] に設定
   2. [Rating] を列シェルフにドラッグ
   3. [Amount] を行シェルフにドラッグ (SUM)
   4. [Cast Name] を詳細シェルフにドラッグ
   5. [Cast Type] を色シェルフにドラッグ
   ```

3. **サイズ設定**
   ```
   [Experience Months] をサイズシェルフにドラッグ
   → 経験年数に応じて円のサイズが変化
   ```

**期待される結果：**
```
🎯 キャスト分析散布図
- X軸: 評価点 (3.5-5.0)
- Y軸: 売上金額
- 色: キャストタイプ
- サイズ: 経験月数

💡 発見例：
→ 知的系キャストは高評価・高売上
→ 経験年数と売上は必ずしも比例しない
→ 評価4.5以上のキャストが売上上位を占有
```

---

### 練習5: デュアル軸チャート（売上と来店数）

**目標：** 複数のKPIを1つのチャートで分析

**操作手順：**

1. **基本チャート作成**
   ```
   📌 操作：
   1. [Sale Date] を列にドラッグ → [月] に設定
   2. [Amount] を行にドラッグ (SUM)
   ```

2. **2つ目の軸追加**
   ```
   📌 操作：
   1. [Sale Id] を行シェルフにドラッグ (右側)
   2. CNT(Sale Id) に変更
   3. 右クリック → [デュアル軸]
   ```

3. **マークタイプ設定**
   ```
   📌 操作：
   1. SUM(Amount): 棒グラフ
   2. CNT(Sale Id): 線グラフ
   3. 軸を右クリック → [軸の同期]
   ```

**期待される結果：**
```
📊 売上金額(棒) + 来店数(線) の複合チャート
- 左軸: 売上金額
- 右軸: 来店数
- 両者の相関関係が一目瞭然

💡 分析ポイント：
→ 来店数が多い月≠売上が高い月
→ 客単価の季節性要因分析
```

---

## 🟠 上級編：ダッシュボード作成

### 練習6: 経営ダッシュボード構築

**目標：** 経営者向け統合ダッシュボードの作成

**レイアウト設計：**
```
┌─────────────────────────────────────┐
│ 🎯 Rose Garden 経営ダッシュボード     │
├─────────────────────────────────────┤
│ 📊 KPIサマリー（上部20%）            │
├─────────────────────────────────────┤
│ 📈 売上推移  │ 🎯 顧客構成           │
│   (左50%)    │   (右50%)             │
├─────────────────────────────────────┤
│ ⭐ キャスト分析（下部30%）           │
└─────────────────────────────────────┘
```

**操作手順：**

1. **新しいダッシュボード作成**
   ```
   下部の [新しいダッシュボード] をクリック
   ```

2. **サイズ設定**
   ```
   左側パネル → [サイズ] → [デスクトップ] → [1366x768]
   ```

3. **KPIサマリー作成**
   ```
   📌 新しいワークシート作成：
   
   今月売上:
   1. [Amount] を行にドラッグ
   2. フィルターで今月のみ選択
   3. 大きなフォントで表示
   
   前月比:
   計算フィールド作成
   名前: "前月比"
   計算式: 
   (SUM([Amount]) - LOOKUP(SUM([Amount]), -1)) / 
   LOOKUP(SUM([Amount]), -1)
   ```

4. **ワークシートをダッシュボードに配置**
   ```
   📌 操作：
   1. 左パネルからワークシートをドラッグ
   2. 配置位置を調整
   3. タイトル・レイアウト調整
   ```

5. **フィルターの追加**
   ```
   📌 操作：
   1. 日付範囲フィルター追加
   2. 顧客ランクフィルター追加
   3. 全ワークシートに適用
   ```

---

### 練習7: インタラクティブ機能実装

**目標：** ユーザーが操作できる動的ダッシュボード

**操作手順：**

1. **アクション設定**
   ```
   📌 操作：
   ダッシュボード → [アクション]
   
   ハイライトアクション:
   - ソース: 顧客ランク円グラフ
   - ターゲット: 売上推移チャート
   - 実行タイミング: ホバー
   ```

2. **パラメーター作成**
   ```
   📌 計算フィールド：
   
   パラメーター作成:
   名前: "期間選択"
   データ型: 文字列
   リスト: 今月, 過去3ヶ月, 過去1年
   
   計算フィールド:
   名前: "期間フィルター"
   計算式:
   CASE [期間選択]
   WHEN "今月" THEN DATEDIFF('day', TODAY(), [Sale Date]) <= 30
   WHEN "過去3ヶ月" THEN DATEDIFF('day', TODAY(), [Sale Date]) <= 90
   WHEN "過去1年" THEN DATEDIFF('day', TODAY(), [Sale Date]) <= 365
   END
   ```

3. **ドリルダウン機能**
   ```
   📌 操作：
   URL アクション追加:
   - 名前: "顧客詳細"
   - URL: javascript:alert('顧客ID: <Customer Id>')
   - メニュー項目として実行
   ```

---

## 🔴 エキスパート編：高度な分析

### 練習8: 予測分析とトレンドライン

**目標：** 将来の売上予測とビジネス計画

**操作手順：**

1. **売上予測**
   ```
   📌 操作：
   1. 月別売上チャートを作成
   2. [分析] → [予測] → [傾向線の表示]
   3. 予測期間: 6ヶ月
   4. 予測モデル: 自動選択
   5. 信頼区間: 95%
   ```

2. **季節性分析**
   ```
   📌 計算フィールド：
   名前: "季節調整"
   計算式:
   CASE 
   WHEN MONTH([Sale Date]) IN (12,1,2) THEN "冬季"
   WHEN MONTH([Sale Date]) IN (3,4,5) THEN "春季"
   WHEN MONTH([Sale Date]) IN (6,7,8) THEN "夏季"
   ELSE "秋季"
   END
   ```

**期待される結果：**
```
📈 予測分析結果
- 将来6ヶ月の売上予測
- 上限・下限の信頼区間表示
- 季節性パターンの可視化

💡 ビジネス活用：
→ 在庫計画の精度向上
→ 人員配置の最適化
→ 売上目標の科学的設定
```

---

### 練習9: コホート分析

**目標：** 顧客の継続率分析

**操作手順：**

1. **コホート計算フィールド作成**
   ```
   📌 計算フィールド：
   
   初回来店月:
   { FIXED [Customer Id] : MIN([Sale Date]) }
   
   来店経過月:
   DATEDIFF('month', [初回来店月], [Sale Date])
   
   リテンション率:
   COUNTD([Customer Id]) / 
   { FIXED [初回来店月] : COUNTD([Customer Id]) }
   ```

2. **ヒートマップ作成**
   ```
   📌 操作：
   1. [初回来店月] を行にドラッグ
   2. [来店経過月] を列にドラッグ
   3. [リテンション率] を色にドラッグ
   4. マークタイプ: 正方形
   ```

**期待される結果：**
```
🔥 コホート分析ヒートマップ
- 各月の新規顧客の継続率を可視化
- 色の濃さでリテンション率を表現
- 顧客ライフサイクルの理解向上

💡 戦略的洞察：
→ 新規顧客の3ヶ月継続率
→ シーズン別の顧客定着パターン
→ チャーン予防施策の効果測定
```

---

## 🎯 実践的な応用課題

### 課題1: 売上最適化ダッシュボード

**ミッション：** 「来月の売上を20%向上させるための戦略ダッシュボード」

**要件：**
- 現在の売上構造分析
- 改善ポイントの特定
- 具体的なアクションプラン提示

**使用チャート：**
- 顧客ランク別売上ポテンシャル
- 時間帯別稼働率分析
- キャスト配置最適化マップ
- サービスタイプ別収益性

---

### 課題2: リアルタイム監視ダッシュボード

**ミッション：** 「今夜の営業状況をリアルタイムで把握」

**要件：**
- 現在の売上進捗
- 時間別来店数推移
- キャスト稼働状況
- 目標達成予測

**技術要素：**
- 自動更新設定
- アラート機能
- モバイル対応レイアウト

---

## 📚 学習リソースと次のステップ

### Tableau学習の継続

**推奨学習パス：**
```
🎓 初級 → 中級 → 上級 → エキスパート

初級 (1-2週間):
├─ 基本チャート作成マスター
├─ データ接続・結合理解
├─ フィルター・パラメーター操作
└─ 基本的なダッシュボード作成

中級 (2-4週間):
├─ 計算フィールド応用
├─ LOD (Level of Detail) 表現
├─ アクション・インタラクティブ機能
└─ パフォーマンス最適化

上級 (1-2ヶ月):
├─ 高度な統計解析
├─ 予測モデリング
├─ カスタムSQL活用
└─ Tableau Server 管理

エキスパート (継続):
├─ 機械学習連携
├─ API活用・自動化
├─ 大規模データ処理
└─ コミュニティ貢献
```

### 実データでの練習

**推奨データセット：**
```
📊 練習用データ：

小売データ:
- Superstore データセット
- Eコマース売上データ
- 在庫管理データ

金融データ:
- 株価データ
- 為替レートデータ
- 投資ポートフォリオ

マーケティング:
- Google Analytics データ
- SNS エンゲージメント
- キャンペーン効果測定
```

### 資格・認定

**Tableau認定資格：**
```
🏆 資格取得ロードマップ：

1. Tableau Desktop Specialist
   └─ 基本操作の習熟証明

2. Tableau Desktop Certified Associate  
   └─ 実務レベルの分析スキル

3. Tableau Desktop Certified Professional
   └─ 高度な分析・設計能力

4. Tableau Server Certified Associate
   └─ サーバー管理・運用スキル
```

## 🎉 練習完了後の成果確認

### 習得スキルチェックリスト

**技術スキル：**
```
✅ データ接続・前処理
✅ 基本チャート (棒・線・円・散布図)
✅ 計算フィールド作成
✅ ダッシュボード設計
✅ フィルター・パラメーター
✅ インタラクティブ機能
✅ 予測分析・統計手法
✅ パフォーマンス最適化
```

**ビジネススキル：**
```
✅ KPI設計・測定
✅ データストーリーテリング
✅ ステークホルダー向け資料作成
✅ ROI・ビジネス価値測定
✅ 継続的改善プロセス
```

### ポートフォリオ作成

**作品集に含めるべき項目：**
```
📁 Tableau ポートフォリオ：

1. 基本分析ダッシュボード
   └─ 売上・顧客・商品分析

2. 高度な分析事例
   └─ 予測・クラスタリング・コホート

3. インタラクティブダッシュボード
   └─ パラメーター・アクション活用

4. モバイル対応ダッシュボード
   └─ レスポンシブデザイン

5. ストーリーポイント
   └─ プレゼンテーション形式
```

頑張って練習してください！何か質問があればいつでもサポートします！ 🚀📊

---

*実際にTableauを触りながら学ぶことで、データ可視化の本当の面白さと価値を実感できるはずです。継続的な学習で、データドリブンな意思決定ができるエンジニアを目指しましょう！*
